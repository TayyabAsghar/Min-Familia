<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        50i/K654NeTFdGTrSoyOAAAAAElFTkSuQmCC
</value>
  </data>
</root>